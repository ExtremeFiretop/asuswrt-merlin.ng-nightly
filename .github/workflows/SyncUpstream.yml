name: Sync Upstream

permissions: write-all

on: 
  schedule:
    - cron: '45 4 * * *'
  workflow_dispatch:

jobs:
  sync-upstream-3006:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up upstream and sync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH=3006.102
          UPSTREAM_REPO=https://github.com/RMerl/asuswrt-merlin.ng.git

          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          if ! git remote | grep -q upstream; then
            git remote add upstream $UPSTREAM_REPO
          fi

          echo "Fetching from upstream..."
          git fetch upstream

          echo "Fetching latest changes from origin..."
          git fetch origin

          echo "Comparing commit hashes of upstream/$BRANCH and origin/$BRANCH"
          UPSTREAM_COMMIT=$(git rev-parse upstream/$BRANCH)
          ORIGIN_COMMIT=$(git rev-parse origin/$BRANCH)

          if [ "$UPSTREAM_COMMIT" = "$ORIGIN_COMMIT" ]; then
            echo "No changes found between upstream/$BRANCH and origin/$BRANCH. Skipping sync."
            exit 0
          else
            echo "Changes found. Proceeding with sync."
          fi

          echo "Checking out branch $BRANCH"
          git checkout -B $BRANCH origin/$BRANCH

          echo "Resetting to upstream/$BRANCH"
          git reset --hard upstream/$BRANCH

          echo "Status after reset:"
          git status

          echo "Force pushing changes to origin..."
          git push origin $BRANCH --force

          echo "Creating a lightweight tag to mark the sync point"
          TAG_NAME="sync-$(date +%Y%m%d%H%M%S)"
          git tag -a "$TAG_NAME" -m "Synced with upstream on $(date)"
          git push origin "$TAG_NAME"

      - name: Trigger Build-Images workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: build-images-3006

  sync-upstream-3004:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up upstream and sync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH=3004.388
          UPSTREAM_REPO=https://github.com/RMerl/asuswrt-merlin.ng.git

          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          if ! git remote | grep -q upstream; then
            git remote add upstream $UPSTREAM_REPO
          fi

          echo "Fetching from upstream..."
          git fetch upstream

          echo "Fetching latest changes from origin..."
          git fetch origin

          echo "Comparing commit hashes of upstream/$BRANCH and origin/$BRANCH"
          UPSTREAM_COMMIT=$(git rev-parse upstream/$BRANCH)
          ORIGIN_COMMIT=$(git rev-parse origin/$BRANCH)

          if [ "$UPSTREAM_COMMIT" = "$ORIGIN_COMMIT" ]; then
            echo "No changes found between upstream/$BRANCH and origin/$BRANCH. Skipping sync."
            exit 0
          else
            echo "Changes found. Proceeding with sync."
          fi

          echo "Checking out branch $BRANCH"
          git checkout -B $BRANCH origin/$BRANCH

          echo "Resetting to upstream/$BRANCH"
          git reset --hard upstream/$BRANCH

          echo "Status after reset:"
          git status

          echo "Force pushing changes to origin..."
          git push origin $BRANCH --force

          echo "Creating a lightweight tag to mark the sync point"
          TAG_NAME="sync-$(date +%Y%m%d%H%M%S)"
          git tag -a "$TAG_NAME" -m "Synced with upstream on $(date)"
          git push origin "$TAG_NAME"

      - name: Trigger Build-Images workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: build-images-3004
